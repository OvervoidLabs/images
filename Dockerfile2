# Base image
FROM ubuntu:22.04

# Set environment variables
ENV JAVA_VERSION=jdk-21.0.3+9
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8
ENV PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV JAVA_HOME=/opt/java/openjdk

# Update and install necessary packages
RUN set -eux; \
    apt-get update; \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    curl \
    wget \
    fontconfig \
    ca-certificates \
    p11-kit \
    binutils \
    tzdata \
    locales; \
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen; \
    locale-gen en_US.UTF-8; \
    rm -rf /var/lib/apt/lists/*

# Download and install OpenJDK
RUN /bin/sh -c set -eux; \
    ARCH="$(dpkg --print-architecture)"; \
    case "${ARCH}" in \
        aarch64|arm64) ESUM='7d3ab0e8eba95bd682cfda8041c6cb6fa21e09d0d9131316fd7c96c78969de31'; \
                      BINARY_URL='https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.3%2B9/OpenJDK21U-jdk_aarch64_linux_hotspot_21.0.3_9.tar.gz'; \
                      ;; \
        amd64|i386:x86-64) ESUM='fffa52c22d797b715a962e6c8d11ec7d79b90dd819b5bc51d62137ea4b22a340'; \
                           BINARY_URL='https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.3%2B9/OpenJDK21U-jdk_x64_linux_hotspot_21.0.3_9.tar.gz'; \
                           ;; \
        ppc64el|powerpc:common64) ESUM='9a1079d7f0fc72951fdc9a0029e49a15f6ba114683aee626f882ee2c761f1d57'; \
                                  BINARY_URL='https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.3%2B9/OpenJDK21U-jdk_ppc64le_linux_hotspot_21.0.3_9.tar.gz'; \
                                  ;; \
        s390x|s390:64-bit) ESUM='f57a078d417614e5d78c07c77a6d8a04701058cf692c8e2868d593582be92768'; \
                           BINARY_URL='https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.3%2B9/OpenJDK21U-jdk_s390x_linux_hotspot_21.0.3_9.tar.gz'; \
                           ;; \
        *) echo "Unsupported arch: ${ARCH}"; exit 1; ;; \
    esac; \
    wget --progress=dot:giga -O /tmp/openjdk.tar.gz ${BINARY_URL}; \
    echo "${ESUM} */tmp/openjdk.tar.gz" | sha256sum -c -; \
    mkdir -p "$JAVA_HOME"; \
    tar --extract --file /tmp/openjdk.tar.gz --directory "$JAVA_HOME" --strip-components 1 --no-same-owner; \
    rm -f /tmp/openjdk.tar.gz ${JAVA_HOME}/lib/src.zip; \
    find "$JAVA_HOME/lib" -name '*.so' -exec dirname '{}' ';' | sort -u > /etc/ld.so.conf.d/docker-openjdk.conf; \
    ldconfig; \
    java -Xshare:dump;

# Verify Java installation
RUN /bin/sh -c set -eux; \
    echo "Verifying install ..."; \
    fileEncoding="$(echo 'System.out.println(System.getProperty("file.encoding"))' | jshell -s -)"; \
    [ "$fileEncoding" = 'UTF-8' ]; \
    rm -rf ~/.java; \
    echo "javac --version"; javac --version; \
    echo "java --version"; java --version; \
    echo "Complete."

# Set working directory
WORKDIR /app/data

# Download PaperMC server jar
RUN curl -o server.jar https://api.papermc.io/v2/projects/paper/versions/1.20.5/builds/22/downloads/paper-1.20.5-22.jar

# Accept EULA
RUN echo "eula=true" > eula.txt

# Copy the entrypoint script
COPY entrypoint.sh /__cacert_entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/__cacert_entrypoint.sh"]

# Default command to start the server
CMD ["java", "-Xms512M", "-Xmx4096M", "-jar", "server.jar", "--nogui"]

# Add additional file
ADD file:aa631666e3d7f8925e1308c15b2b63b5649db2cfcb079cba8218af98a5966923 /

# Labels
LABEL org.opencontainers.image.version=22.04
LABEL org.opencontainers.image.ref.name=ubuntu

# Arguments for build
ARG LAUNCHPAD_BUILD_ARCH
ARG RELEASE
